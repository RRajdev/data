:auto LOAD CSV WITH HEADERS FROM "https://raw.githubusercontent.com/RRajdev/data/main/synbritain_people.csv" AS row WITH row LIMIT 1
CALL {
WITH row
CREATE (p:Person {id: apoc.create.uuid(), familyName: COALESCE(row.FAMILYNAME, 'NOT SET'), givenName: COALESCE(row.FIRSTNAME, 'NOT SET'),  dob: COALESCE(row.DOB, 'NOT SET')})
FOREACH (ignoreMe in CASE WHEN exists(row.FAMILYNAME) AND row.FAMILYNAME <> ""  THEN [1] ELSE [] END | MERGE (fn:FAMILYNAME {value: row.FAMILYNAME}) MERGE (p)-[:HAS_FAMILY_NAME]->(fn))
FOREACH (ignoreMe in CASE WHEN exists(row.FIRSTNAME) AND row.FIRSTNAME <> ""  THEN [1] ELSE [] END | MERGE (gn:GIVENNAME {value: row.FIRSTNAME}) MERGE (p)-[:HAS_GIVEN_NAME]->(gn))
FOREACH (ignoreMe in CASE WHEN exists(row.DOB) AND row.DOB <> ""  THEN [1] ELSE [] END | MERGE (dob:DOB {value: row.DOB}) MERGE (p)-[:HAS_DOB]->(dob))
CREATE (i:Identity {id: apoc.create.uuid(), nino: COALESCE(row.NINO)})
MERGE (p)-[:HAS_IDENTITY]->(i)
FOREACH (ignoreMe in CASE WHEN exists(row.NINO) AND row.NINO <> ""  THEN [1] ELSE [] END | MERGE (nino:NINO {value: row.NINO}) MERGE (i)-[:HAS_NINO]->(nino))
CREATE (a:Address {id: apoc.create.uuid(), description: COALESCE(row.ADDRESS_LINE_1, 'NOT SET') + "," + COALESCE(row.TOWN, 'NOT SET') + "," +
COALESCE(row.COUNTRY_ID, 'NOT SET') + "," + COALESCE(row.POSTCODE, 'NOT SET')})
MERGE (p)-[:HAS_ADDRESS]->(a)
FOREACH (ignoreMe in CASE WHEN exists(row.POSTCODE) AND row.POSTCODE <> ""  THEN [1] ELSE [] END | MERGE (pc:Postcode {value: row.POSTCODE}) MERGE (a)-[:HAS_POSTCODE]->(pc))
FOREACH (ignoreMe in CASE WHEN exists(row.ADDRESS_LINE_1) AND row.ADDRESS_LINE_1<> ""  THEN [1] ELSE [] END | MERGE (al:AddressLine1 {value: row.ADDRESS_LINE_1}) MERGE (a)-[:HAS_POSTCODE]->(al))
} IN TRANSACTIONS OF 100 ROWS